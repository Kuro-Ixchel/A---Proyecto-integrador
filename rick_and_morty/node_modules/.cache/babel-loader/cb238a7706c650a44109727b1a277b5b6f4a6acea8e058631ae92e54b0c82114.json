{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dixec\\\\OneDrive\\\\Escritorio\\\\SoyHenrry\\\\A - Proyecto integrador\\\\rick_and_morty\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Cards from './components/Cards/Cards.jsx';\nimport Nav from './components/Nav/Nav.jsx';\nimport { useState } from 'react';\nimport style from './App.module.css';\nimport { Route, Routes } from 'react-router-dom';\nimport About from './components/About/About.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  function onSearch(id) {\n    const URL_BASE = 'https://be-a-rym.up.railway.app/api';\n    const KEY = 'ad18cc96ece3.65679ed52484638fb6a3';\n    if (characters.find(char => char.id === id)) {\n      return alert('El personage ya se muestra en pantalla');\n    }\n    fetch(`${URL_BASE}/character/${id}?key=${KEY}`).then(response => response.json()).then(data => {\n      if (data.name) setCharacters(oldChars => [...oldChars, data]);else alert('El personage ya se muestra en pantalla.');\n    });\n  }\n  const onClose = id => {\n    setCharacters(characters.filter(char => char.id !== id));\n  };\n\n  /*<Nav /> debe que aparecer en todas las rutas.\r\n  <Cards /> debe aparecer sólo en la ruta /home.\r\n  <About /> debe aparecer sólo en la ruta /about.\r\n  <Detail /> debe aparecer sólo en la ruta /detail/:detailId\r\n  */\n\n  const [characters, setCharacters] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: '25px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.nav,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 35\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          characters: characters,\n          onClose: onClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/detail/:detailId\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XYOUpNAi+Jhs2dnEwppRANg7X2I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Cards","Nav","useState","style","Route","Routes","About","jsxDEV","_jsxDEV","App","_s","onSearch","id","URL_BASE","KEY","characters","find","char","alert","fetch","then","response","json","data","name","setCharacters","oldChars","onClose","filter","className","padding","children","nav","fileName","_jsxFileName","lineNumber","columnNumber","path","element","Detail","_c","$RefreshReg$"],"sources":["C:/Users/dixec/OneDrive/Escritorio/SoyHenrry/A - Proyecto integrador/rick_and_morty/src/App.js"],"sourcesContent":["import Cards from './components/Cards/Cards.jsx'\r\nimport Nav from './components/Nav/Nav.jsx'\r\nimport { useState } from 'react'\r\nimport style from './App.module.css'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport About from './components/About/About.jsx'\r\n\r\nfunction App () {\r\n\r\n  function onSearch(id) {\r\n    const URL_BASE = 'https://be-a-rym.up.railway.app/api';\r\n    const KEY = 'ad18cc96ece3.65679ed52484638fb6a3'\r\n\r\n    if(characters.find(char=>char.id === id)){\r\n      return alert ('El personage ya se muestra en pantalla');\r\n    }\r\n    \r\n    fetch(`${URL_BASE}/character/${id}?key=${KEY}`)\r\n       .then((response) => response.json())\r\n       .then((data) => {\r\n          if (data.name) setCharacters((oldChars) => [...oldChars, data]);\r\n           else alert('El personage ya se muestra en pantalla.');\r\n       });}\r\n\r\n const onClose = (id)=>{\r\n  setCharacters(characters.filter(char=>char.id!==id))\r\n }\r\n\r\n\r\n /*<Nav /> debe que aparecer en todas las rutas.\r\n <Cards /> debe aparecer sólo en la ruta /home.\r\n <About /> debe aparecer sólo en la ruta /about.\r\n <Detail /> debe aparecer sólo en la ruta /detail/:detailId\r\n*/\r\n\r\n  const [characters, setCharacters] = useState([]);\r\n  return (\r\n    <div className='App' style={{ padding: '25px' }}>\r\n      <div className={style.nav}> <Nav onSearch={onSearch}/> </div>\r\n\r\n      <Routes>\r\n        <Route \r\n        path= \"/home\" \r\n        element={<Cards characters={characters} onClose={onClose}/>} />\r\n\r\n        <Route path=\"/about\" element={<About/>}/>\r\n\r\n        <Route\r\n        path=\"/detail/:detailId\" element={<Detail />}/>\r\n\r\n      </Routes>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}